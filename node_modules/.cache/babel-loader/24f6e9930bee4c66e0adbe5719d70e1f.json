{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\n// <Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>\n//   <a>{props.title}</a>\n// </Link>\nimport Layout from '../components/MyLayout.js';\nimport App from '../components/app.js';\nimport Link from 'next/link';\nimport List from '../components/list';\nimport fetch from 'isomorphic-unfetch';\n\nvar Service = function Service(props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, \"Default Todo List from the server endpoint\"), React.createElement(\"ul\", null, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id)\n    }, React.createElement(\"a\", null, show.name)));\n  })), React.createElement(\"div\", null, React.createElement(\"section\", null, React.createElement(App, null))));\n};\n\nService.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:3000/api/course');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Service;","map":{"version":3,"sources":["C:\\Users\\admin1\\Desktop\\ALCWITH GOOGLE-Project\\NanoDegreeWork\\NEXT-project\\todo-list-app\\pages\\index.js"],"names":["Layout","App","Link","List","fetch","Service","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length"],"mappings":";;;AAAA;AACA;AACA;AAGA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SACb,oBAAC,MAAD,QACC,6EADD,EAEC,gCACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD;AAAA,WACf;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB;AAA/B,OACE,+BAAID,IAAI,CAACE,IAAT,CADF,CADF,CADe;AAAA,GAAhB,CADH,CAFD,EAWC,iCACA,qCACE,oBAAC,GAAD,OADF,CADA,CAXD,CADa;AAAA,CAAhB;;AAoBAN,OAAO,CAACO,eAAR;AAAA;AAAA;AAAA;AAAA,yBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACNR,KAAK,CAAC,kCAAD,CADC;;AAAA;AAClBS,UAAAA,GADkB;AAAA;AAAA,iBAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBC,UAAAA,IAFkB;AAIxBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJwB,2CAMjB;AACLX,YAAAA,KAAK,EAAEQ;AADF,WANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAWA,eAAeV,OAAf","sourcesContent":["// <Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>\r\n//   <a>{props.title}</a>\r\n// </Link>\r\n\r\n\r\nimport Layout from '../components/MyLayout.js'\r\nimport App from '../components/app.js'\r\nimport Link from 'next/link'\r\nimport List from '../components/list'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Service = (props) => (\r\n   <Layout>\r\n    <h1>Default Todo List from the server endpoint</h1>\r\n    <ul>\r\n      {props.shows.map((show) => (\r\n        <li key={show.id}>\r\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\r\n            <a>{show.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    <div>\r\n    <section>\r\n      <App/>\r\n    </section>\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nService.getInitialProps = async function() {\r\n  const res = await fetch('http://localhost:3000/api/course')\r\n  const data = await res.json()\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`)\r\n\r\n  return {\r\n    shows: data\r\n  }\r\n}\r\n\r\nexport default Service\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}