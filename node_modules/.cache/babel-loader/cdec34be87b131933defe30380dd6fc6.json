{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport React from \"react\";\n//   const result =(props)=>( console.log(props.item))\n//     // if(this.state.term){console.log(result)}\n//       // console.log(result)\n//       result.getInitialProps = async function() {\n//   const res = await fetch('../server')\n//   const data = await res.json()\n//   // console.log(`Show data fetched. Count: ${data.length}`)\n//   console.log(`Show data fetched. Count: ${data}`)\n//   return {\n//     shows: data\n//   }\n// }\n// if(this.state.term){console.log(result)}\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Service = function Service(props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, \"Batman TV Shows\"), React.createElement(\"ul\", null, _this.props.shows.map(function (_ref) {\n    var show = _ref.show;\n    return React.createElement(\"li\", {\n      key: show.id\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id)\n    }, React.createElement(\"a\", null, show.name)));\n  })));\n};\n\nService.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Service;","map":{"version":3,"sources":["C:\\Users\\admin1\\Desktop\\ALCWITH GOOGLE-Project\\NanoDegreeWork\\NEXT-project\\todo-list-app\\components\\service.js"],"names":["Layout","Link","fetch","Service","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length"],"mappings":";;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SACd,oBAAC,MAAD,QACE,kDADF,EAEE,gCACG,KAAI,CAACA,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB;AAAA,QAAEC,IAAF,QAAEA,IAAF;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB;AAA/B,OACE,+BAAID,IAAI,CAACE,IAAT,CADF,CADF,CADoB;AAAA,GAArB,CADH,CAFF,CADc;AAAA,CAAhB;;AAeAN,OAAO,CAACO,eAAR;AAAA;AAAA;AAAA;AAAA,yBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACNR,KAAK,CAAC,8CAAD,CADC;;AAAA;AAClBS,UAAAA,GADkB;AAAA;AAAA,iBAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBC,UAAAA,IAFkB;AAIxBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJwB,2CAMjB;AACLX,YAAAA,KAAK,EAAEQ;AADF,WANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAWA,eAAeV,OAAf","sourcesContent":["//   const result =(props)=>( console.log(props.item))\r\n//     // if(this.state.term){console.log(result)}\r\n//       // console.log(result)\r\n\r\n//       result.getInitialProps = async function() {\r\n//   const res = await fetch('../server')\r\n//   const data = await res.json()\r\n\r\n//   // console.log(`Show data fetched. Count: ${data.length}`)\r\n//   console.log(`Show data fetched. Count: ${data}`)\r\n\r\n//   return {\r\n//     shows: data\r\n//   }\r\n// }\r\n\r\n// if(this.state.term){console.log(result)}\r\n\r\nimport Layout from '../components/MyLayout.js'\r\nimport Link from 'next/link'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Service = (props) => (\r\n  <Layout>\r\n    <h1>Batman TV Shows</h1>\r\n    <ul>\r\n      {this.props.shows.map(({show}) => (\r\n        <li key={show.id}>\r\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\r\n            <a>{show.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Layout>\r\n)\r\n\r\nService.getInitialProps = async function() {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\r\n  const data = await res.json()\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`)\r\n\r\n  return {\r\n    shows: data\r\n  }\r\n}\r\n\r\nexport default Service"]},"metadata":{},"sourceType":"module"}